{"version":3,"sources":["components/Header.js","components/Resultados/Score.js","components/Resultados/StaticScore.js","components/Resultados/Puntos.js","components/Icon.js","components/Country.js","components/AddCountryForm.js","components/Grupo.js","components/AddGroup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","title","className","Score","_ref","score","id","changeScore","onClick","StaticScore","Puntos","puntos","Icon","isWinner","viewBox","d","transform","width","height","Country","name","pj","pg","pe","pp","gf","gc","df","handlePeChange","handlePgChange","handlePpChange","handleGf","handleGc","handleRemoveCountry","components_Icon","Resultados_StaticScore","Resultados_Score","Resultados_Puntos","AddCountryForm","state","value","handleChange","e","_this","setState","target","toUpperCase","handleSubmit","preventDefault","handleAddCountry","onSubmit","this","type","onChange","placeholder","Component","Grupo","countries","prevId","length","prevPj","getWinnerId","points","map","country","realPoints","point","index","maxIndex","i","delta","countryIndex","findIndex","prevState","key","filter","newCountry","concat","_this2","winnerId","handleRemoveGroup","components_Header","components_Country","toString","components_AddCountryForm","AddGroup","handleAddGroup","App","grupos","titl","newGroup","ind","grupo","components_Grupo","components_AddGroup","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.748769a3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n  return (\n    <header>\n      <h1>{props.title}</h1>\n      <h2 className='pj'>Pj</h2>\n      <h2 className='pg'>PG</h2>\n      <h2 className='pe'>PE</h2>\n      <h2 className='pe'>PP</h2>\n      <h2 className='gf-gc'>GF</h2>\n      <h2 className='gf-gc'>GC</h2>\n      <h2 className='gd'>GD</h2>\n      <h2 className='pts'>Pts</h2>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Score = ({score, id, changeScore}) => {\n\treturn (\n    <div className=\"pg-pe-pp\">\n      <button onClick={() => changeScore(score, id, +1)}>↑</button>\n      <span>{score}</span>\n      <button onClick={() => changeScore(score, id, -1)}>↓</button>\n    </div>\n  );\n};\n\nexport default Score;","import React from 'react';\n\nconst StaticScore = ({score}) => {\n\treturn (\n    <div className='static-score'>\n      <span>{score}</span>\n    </div>\n\t);\n};\n\nexport default StaticScore;","import React from 'react';\n\nconst Puntos = ({puntos}) => {\n\treturn (\n    <div className='puntos'>\n      <span>{puntos}</span>\n    </div>\n  );\n};\n\nexport default Puntos;\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst Icon = ({isWinner}) => {\n    return (\n        <svg viewBox=\"0 0 44 35\" className={isWinner ? 'is-high-score': null}>\n            <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\" />\n            <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\" />\n        </svg>\n    );\n}\n\nexport default Icon;","import React from 'react';\nimport Score from './Resultados/Score';\nimport StaticScore from './Resultados/StaticScore';\nimport Puntos from './Resultados/Puntos';\nimport Icon from './Icon';\n\nconst Country = (props) => {\n  const {name, isWinner, id, pj, pg, pe, pp, gf, gc,df, puntos, handlePeChange, handlePgChange, handlePpChange, handleGf, handleGc, handleRemoveCountry} = props;\n  return (\n    <div className=\"country\">\n      <span className=\"country-name\">\n        <button onClick={() => handleRemoveCountry(id)}>✖</button>\n        <Icon isWinner={isWinner}/>\n        <span>{name}</span>\n      </span>\n\n      <StaticScore \n      score={pj} />\n\n      <Score \n      score={pg}\n      id={id}\n      changeScore={handlePgChange}\n      />\n\n      <Score\n      score={pe}\n      id={id}\n      changeScore={handlePeChange} \n      />\n\n      <Score\n      score={pp}\n      id={id}\n      changeScore={handlePpChange}\n      />\n\n      <Score\n      score={gf}\n      id={id}\n      changeScore={handleGf}\n      />\n\n      <Score\n      score={gc}\n      id={id}\n      changeScore={handleGc}\n      />\n\n      <StaticScore \n      score={df} />\n\n      <Puntos\n      puntos={puntos} />\n    </div>\n  );\n}\n\nexport default Country;","import React, {Component} from 'react';\n\nclass AddCountryForm extends Component {\n  state = {\n    value:''\n  };\n\n  handleChange = e => {\n    this.setState({value: e.target.value.toUpperCase()});\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleAddCountry(this.state.value);\n    this.setState({value: '',});\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input \n          type='text'\n          value={this.state.value}\n          onChange={this.handleChange}\n          placeholder='Ingresa un equipo'\n          />\n\n        <input \n          type='submit'\n          value=\"Añade a un equipo\"\n          />\n      </form>\n    );\n  }\n}\n\n\nexport default AddCountryForm;","import React, {Component} from 'react';\nimport Header from './Header';\nimport Country from './Country';\nimport AddCountryForm from './AddCountryForm';\n\n/* ¿Cansado de calcular la tabla de posiciones? ¿Con miedo de cometer un error matemático? ¡No te preocupes! Nosotros te ayudamos. \n*/\nclass Grupo extends Component {\n  state = {\n    countries: [\n      {\n        name: 'EQUIPO',\n        id: 0,\n        pj:1,\n        pg: 0,\n        pe: 0,\n        pp: 0,\n        gf: 0,\n        gc: 0,\n        df: 0,\n        puntos: 0   \n      }\n    ]\n  };\n\n  prevId = this.state.countries.length - 1;\n  prevPj = this.state.countries.length - 1;\n\n  getWinnerId = () => {\n    const points = this.state.countries.map(country => country.puntos);\n    const df = this.state.countries.map(country => country.df);\n    \n    let realPoints = points.map((point, index) => {\n      return point + df[index];\n    });\n\n    // find the index of the maximum points\n    let maxIndex = 0;\n    for (let i = 1; i < realPoints.length; i++) {\n      if (realPoints[i] > realPoints[maxIndex]) {\n        maxIndex = i;\n      }\n    }\n    return this.state.countries[maxIndex].id;\n  }\n\n  /* COUNTRY */\n  handlePeChange = (pe, id, delta) => {\n    if (pe <= 0 && delta < 0) {\n      return;\n    } else {\n      let countryIndex = this.state.countries.findIndex(country => country.id === id);\n      this.setState(prevState => {\n        return {\n          pe: prevState.countries[countryIndex].pe += delta,\n          puntos: prevState.countries[countryIndex].puntos += delta        \n        }\n      });\n    }\n  };\n\n  handlePgChange = (pg, id, delta) => {\n    if (pg <= 0 && delta < 0) {\n      return;\n    } else {\n      let countryIndex = this.state.countries.findIndex(country => country.id === id);\n      this.setState(prevState => {\n        return {\n          pg: prevState.countries[countryIndex].pg += delta,\n          puntos: prevState.countries[countryIndex].puntos += (delta * 3)\n        }\n      });\n    }\n  };\n\n  handlePpChange = (pp, id, delta) => {\n    if (pp <= 0 && delta < 0) {\n      return;\n    } else {\n      let countryIndex = this.state.countries.findIndex(country => country.id === id);\n      this.setState(prevState => ({\n        pp: prevState.countries[countryIndex].pp += delta\n      }));\n    }\n  };\n\n  handleGf = (gf, id, delta) => {\n    if (gf <= 0 && delta < 0) {\n      return;\n    } else {\n      let countryIndex = this.state.countries.findIndex(country => country.id === id);\n      this.setState(prevState => {\n        return {\n          gf: prevState.countries[countryIndex].gf += delta,\n          df: prevState.countries[countryIndex].df += delta\n        }\n      })\n    }\n  };\n\n  handleGc = (gc, id, delta) => {\n    if (gc <= 0 && delta < 0) {\n      return;\n    } else {\n      let countryIndex = this.state.countries.findIndex(country => country.id === id);\n      this.setState(prevState => {\n        return {\n          gc: prevState.countries[countryIndex].gc += delta,\n          df: prevState.countries[countryIndex].df -= delta\n        }\n      })\n    }\n  };\n\n  /* HANDLE COUNTRY FROM */\n\n  handleRemoveCountry = key => {\n    this.prevPj -= 1;\n    // changing the value of pj for all teams\n    this.state.countries.map(country => country.pj = this.prevPj);\n    this.setState(prevState => ({\n      countries: prevState.countries.filter(country => country.id !== key)\n    }));\n  };\n\n  handleAddCountry = name => {\n    let newCountry = {\n      name,\n      id: this.prevId += 1,\n      pj: this.prevPj += 1,\n      pp: 0,\n      pe: 0,\n      pg: 0,\n      gf: 0,\n      gc: 0,\n      df: 0,\n      puntos: 0\n    };\n\n    this.state.countries.map(country => {\n      country.pj = newCountry.pj;\n      return country;\n    });\n\n    this.setState(prevState => ({\n      countries:prevState.countries.concat(newCountry)\n    }));\n  };\n\n  render() {\n    const winnerId = this.getWinnerId();\n    return (\n      <div className='group-container'>\n        <button className='removeGroup' onClick={() => this.props.handleRemoveGroup(this.props.index)}>✖</button>\n\n        <div className='group'>\n          <Header \n          title={this.props.title}\n          />\n\n          {this.state.countries.map( (country) =>\n            <Country \n              pj={country.pj}\n              pg={country.pg}\n              pe={country.pe}\n              pp={country.pp}\n              gf={country.gf}\n              gc={country.gc}\n              df={country.df}\n              puntos={country.puntos}\n              name={country.name}\n              handlePeChange={this.handlePeChange}\n              handlePgChange={this.handlePgChange}\n              handlePpChange={this.handlePpChange}\n              handleGf={this.handleGf}\n              handleGc={this.handleGc}\n              handleRemoveCountry={this.handleRemoveCountry}\n              key={country.id.toString()}\n              id={country.id}\n              // use the id of the winner\n              isWinner={winnerId === country.id}\n            />\n          )}\n\n          <AddCountryForm handleAddCountry={this.handleAddCountry}/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Grupo;","import React, {Component} from 'react';\n\nclass AddGroup extends Component{\n  state = {\n    value: ''\n  };\n\n  handleChange = e => {\n    this.setState({value: e.target.value.toUpperCase()});\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleAddGroup(this.state.value);\n    this.setState({value:''});\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-add-group\">\n        <h1>Grupo:</h1>\n        <input\n          type='text'\n          value={this.state.value}\n          placeholder='Ingresa el nombre del grupo'\n          onChange={this.handleChange}\n        />\n\n        <input \n          type='submit'\n          value='Añade otro grupo'\n        />\n      </form>\n    );\n  }\n  \n}\n\nexport default AddGroup;","import React, {Component} from 'react';\nimport Grupo from './Grupo';\nimport AddGroup from './AddGroup'\nimport './../App.css';\n\n/* ¿Cansado de calcular la tabla de posiciones? ¿Con miedo de cometer un error matemático? ¡No te preocupes! Nosotros te ayudamos. \n*/\nclass App extends Component {\n  state = {\n    grupos: [\n      {\n        title: 'Grupo A',\n        id: 0\n      }\n    ]\n  };\n\n  prevId=this.state.grupos.length;\n  title='Tabla de clasificaciones';\n\n  handleAddGroup = (titl) => {\n    let newGroup = {\n      title: 'Grupo ' + titl,\n      id: this.prevId += 1\n    };\n\n    this.setState(prevState => ({\n      grupos:prevState.grupos.concat(newGroup)\n    }));\n  };\n\n  handleRemoveGroup = ind => {\n    this.setState(prevState => ({\n      grupos: prevState.grupos.filter(grupo => grupo.id !== ind)\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"tablas\">\n        <h1 className='title'>{this.title}</h1>\n        {this.state.grupos.map(grupo => \n          <Grupo\n          title={grupo.title}\n          key={grupo.id.toString()}\n          index={grupo.id}\n          handleRemoveGroup={this.handleRemoveGroup}\n          />\n        )}\n        \n        <AddGroup \n        handleAddGroup={this.handleAddGroup} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}